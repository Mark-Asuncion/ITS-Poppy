import { DialogType, Tutorial } from "../interface";
import { Poppy } from "../poppy";

export class Tutorial03 extends Tutorial {
    constructor() {
        super();
        this.name = "Loops";
        this.cursor = 0;
    }

    update() {
        switch(this.cursor) {
            case 0:
                Poppy.display({
                    message: "Welcome! In this lesson, we will learn about <span class=\"accent\">loops</span> in Python. Loops allow you to execute a block of code multiple times, which is useful for automating repetitive tasks.",
                    dialogType: DialogType.NEXT,
                    cb: (() => this.cursor = 1).bind(this)
                });
                break;
            case 1:
                Poppy.display({
                    message: "Let's start with the <span class=\"info\">for loop</span>. A for loop iterates over a sequence, such as a list, tuple, or range of numbers. This allows you to process each item in the sequence one at a time.",
                    dialogType: DialogType.NEXT,
                    cb: (() => this.cursor = 2).bind(this)
                });
                break;
            case 2:
                Poppy.display({
                    message: "Here’s how to use a for loop to print numbers from 0 to 4:<pre><span class=\"info\">for i in range(5):<br>   print(i)</span></pre> In this example, <span class=\"info\">i</span> takes on each value in the sequence generated by <span class=\"info\">range(5)</span>.",
                    dialogType: DialogType.NONE,
                    onDisplay: (() => {
                        const currentPos = Poppy.pos;
                        Poppy.targetPos = {
                            x: currentPos.x,
                            y: currentPos.y - 70
                        };
                    })
                });
                Poppy.addOnModified([
                    {
                        name: "main",
                        content: "for i in range(5):\n\tprint(i)\n"
                    }
                ], (() => this.cursor = 3).bind(this), (() => this.cursor = -1).bind(this));
                break;
            case 21:
                Poppy.display({
                    message: "Here’s how to use a for loop to print numbers from 0 to 4:<pre><span class=\"info\">for i in range(5):<br>   print(i)</span></pre> In this example, <span class=\"info\">i</span> takes on each value in the sequence generated by <span class=\"info\">range(5)</span>.",
                    dialogType: DialogType.NONE
                });
                Poppy.addOnModified([
                    {
                        name: "main",
                        content: "for i in range(5):\n\tprint(i)\n"
                    }
                ], (() => this.cursor = 3).bind(this), (() => this.cursor = -1).bind(this));
                break;
            case 3:
                Poppy.display({
                    message: "Try running this code to see the numbers printed. The <span class=\"info\">range(5)</span> function generates numbers starting from 0 up to, but not including, 5.",
                    dialogType: DialogType.NEXT,
                    cb: (() => this.cursor = 4).bind(this)
                });
                break;
            case 4:
                Poppy.display({
                    message: "Awesome! Now, let's explore the <span class=\"info\">while loop</span>. A while loop continues executing as long as a given condition is true. This is useful when you don't know in advance how many times you'll need to iterate. Delete the first Diagram Module to start a new one.",
                    dialogType: DialogType.NEXT,
                    cb: (() => this.cursor = 5).bind(this)
                });
                break;
            case 5:
                Poppy.display({
                    message: "Here’s an example of a while loop that prints numbers from 0 to 4:<pre><span class=\"info\">i = 0<br>while i < 5:<br>    print(i)<br>    i += 1</span></pre> In this code, we start with <span class=\"info\">i</span> equal to 0 and continue looping as long as <span class=\"info\">i</span> is less than 5.",
                    dialogType: DialogType.NONE
                });
                Poppy.addOnModified([
                    {
                        name: "main",
                        content: "i = 0\nwhile i < 5:\n\tprint(i)\n\ti += 1\n"
                    }
                ], (() => this.cursor = 6).bind(this), (() => this.cursor = -2 ).bind(this));
                break;
            case 6:
                Poppy.display({
                    message: "Try running this code to see how the while loop works. It keeps printing as long as <span class=\"info\">i</span> is less than 5. Notice that we increment <span class=\"info\">i</span> by 1 with each iteration.",
                    dialogType: DialogType.NEXT,
                    cb: (() => this.cursor = 7).bind(this)
                });
                break;
            case 7:
                Poppy.display({
                    message: "Great job! Loops are powerful tools for automating repetitive tasks. You can try changing the range or the condition in the while loop to see how it affects the output!",
                    dialogType: DialogType.NEXT,
                    cb: (() => this.cursor = 8).bind(this)
                });
                break;
            case -1:
                Poppy.display({
                    message: "Hmm, it seems something went wrong. Did you type the for loop correctly? Make sure it's exactly like the example.",
                    dialogType: DialogType.NEXT,
                    cb: (() => this.cursor = 21).bind(this)
                });
                break;
            case -2:
                Poppy.display({
                    message: "Hmm, it seems something went wrong. Did you type the while loop correctly? Double-check your syntax and try again.",
                    dialogType: DialogType.NEXT,
                    cb: (() => this.cursor = 5).bind(this)
                });
                break;
            default:
                Poppy.tutorial = null;
                console.log("End of tutorial");
                break;
        }
    }    
}
